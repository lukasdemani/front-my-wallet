{"ast":null,"code":"var _jsxFileName = \"/Users/anahristoff/Library/Mobile Documents/com~apple~CloudDocs/Lukas/Driven/my-wallet/front/src/contexts/PercentageContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressContext = /*#__PURE__*/createContext();\nexport function ProgressProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [progress, setProgress] = useState('');\n\n  function updateProgress(progressed, total) {\n    if (total === 0) {\n      setProgress(0);\n      return;\n    }\n\n    setProgress(progressed / total * 100);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ProgressContext.Provider, {\n    value: {\n      progress,\n      updateProgress\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProgressProvider, \"OAR1FW1FuiL2gfiZgJnGZiMDF4w=\");\n\n_c = ProgressProvider;\nexport default ProgressContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProgressProvider\");","map":{"version":3,"sources":["/Users/anahristoff/Library/Mobile Documents/com~apple~CloudDocs/Lukas/Driven/my-wallet/front/src/contexts/PercentageContext.js"],"names":["createContext","useState","ProgressContext","ProgressProvider","children","progress","setProgress","updateProgress","progressed","total"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;;AAEA,MAAMC,eAAe,gBAAGF,aAAa,EAArC;AAEA,OAAO,SAASG,gBAAT,OAAwC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC7C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;;AAEA,WAASM,cAAT,CAAwBC,UAAxB,EAAoCC,KAApC,EAA2C;AACzC,QAAIA,KAAK,KAAK,CAAd,EAAiB;AACfH,MAAAA,WAAW,CAAC,CAAD,CAAX;AACA;AACD;;AAEDA,IAAAA,WAAW,CAAEE,UAAU,GAAGC,KAAd,GAAuB,GAAxB,CAAX;AACD;;AAED,sBACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAEJ,MAAAA,QAAF;AAAYE,MAAAA;AAAZ,KAAjC;AAAA,cACGH;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAjBeD,gB;;KAAAA,gB;AAmBhB,eAAeD,eAAf","sourcesContent":["import { createContext, useState } from \"react\";\n\nconst ProgressContext = createContext();\n\nexport function ProgressProvider({ children }) {\n  const [progress, setProgress] = useState('');\n\n  function updateProgress(progressed, total) {\n    if (total === 0) {\n      setProgress(0);\n      return;\n    }\n\n    setProgress((progressed / total) * 100);\n  }\n\n  return (\n    <ProgressContext.Provider value={{ progress, updateProgress }}>\n      {children}\n    </ProgressContext.Provider>\n  )\n}\n\nexport default ProgressContext;"]},"metadata":{},"sourceType":"module"}